---

language: generic
python: "2.7"

matrix:
  include:
    # Ubuntu 14.04 LTS
    - os: linux
      dist: trusty
      sudo: required
      env: ANSIBLE_VERSION=2.2.3.0 INSTALL_VIRTUALBOX=True
    - os: linux
      dist: trusty
      sudo: required
      env: ANSIBLE_VERSION=2.4.0.0 INSTALL_VIRTUALBOX=True
    # Ubuntu 16.04 LTS
    - os: linux
      dist: xenial
      sudo: required
      env: ANSIBLE_VERSION=2.7.4.0 INSTALL_VIRTUALBOX=True
    # OS X 10.13 (High Sierra) with Xcode 9.4
    - os: osx
      env: INSTALL_VIRTUALBOX=False

# Install Ansible and Python development packages
addons:
  apt:
    packages:
    - python-pip
    - python-dev

before_install:
  # Update Homebrew before installation
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi

install:
  # Install Ansible with Homebrew on OSX
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install ansible; fi

  # Install Ansible with pip
  - if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then sudo pip install ansible==${ANSIBLE_VERSION}; fi

  # Check Ansible version
  - ansible --version

  # Create ansible.cfg with correct roles_path
  - printf '[defaults]\nroles_path=../\n' > ansible.cfg

before_script:
  # https://github.com/travis-ci/travis-ci/issues/6307
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rvm get head || true; fi

script:

  # Basic role syntax check
  - ansible-playbook tests/test.yml -i tests/inventory --syntax-check

  # Test role run
  - >
    ansible-playbook tests/test.yml -i tests/inventory --connection=local
    -e "{'vagrant_install_virtualbox':'${INSTALL_VIRTUALBOX}'}"

  # Test idempotence
  - >
    ansible-playbook tests/test.yml -i tests/inventory --connection=local
    -e "{'vagrant_install_virtualbox':'${INSTALL_VIRTUALBOX}'}"
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Test vagrant was installed correctly
  - command -v vagrant

notifications:
  email: false
